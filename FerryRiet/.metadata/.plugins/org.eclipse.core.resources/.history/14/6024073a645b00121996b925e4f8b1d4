package org.uva.sea.ql.astvisitor;

import java.util.Iterator;

import org.uva.sea.ql.ast.CompoundBlock;
import org.uva.sea.ql.ast.ConditionalStatement;
import org.uva.sea.ql.ast.Expr;
import org.uva.sea.ql.ast.LineStatement;
import org.uva.sea.ql.ast.QLProgram;
import org.uva.sea.ql.ast.Statement;
import org.uva.sea.ql.ast.TypeDescription;

public class ASTNodePrintVisitor implements ASTNodeVisitor {

	@Override
	public void visit(Expr expr) {
		
	}

	@Override
	public void visit(QLProgram qlProgram) {
		System.out.print("form " + qlProgram.programName );
		qlProgram.compound.accept(this) ;
	}

	@Override
	public void visit(CompoundBlock compoundBlock) {
		Iterator<Statement> it = compoundBlock.statementList.iterator();
		System.out.print(" { ");
		while (it.hasNext()) {
			Statement value = (Statement) it.next();
			value.accept(this);
		}
		System.out.println(" } ");	
	}

	@Override
	public void visit(LineStatement lineStatement) {
		System.out.print(lineStatement.lineName);
		System.out.print(lineStatement.displayText);			
	}

	@Override
	public void visit(ConditionalStatement conditionalStatement) {
		// TODO Auto-generated method stub
		System.out.print("if (");
		conditionalStatement.expression.accept(this) ;
		System.out.print(") ");
		conditionalStatement.compound.accept(this) ;
	}

	@Override
	public void visit(TypeDescription typeDescription) {
		// TODO Auto-generated method stub
		
	}

}
