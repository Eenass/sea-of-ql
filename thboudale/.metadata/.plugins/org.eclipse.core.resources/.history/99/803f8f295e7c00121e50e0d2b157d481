package org.uva.sea.ql.parser.test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Test;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.uva.sea.ql.parser.antlr.ANTLRParser;
import org.uva.sea.ql.visitor.ExprChecker;
import org.uva.sea.ql.ast.expressions.Ident;
import org.uva.sea.ql.ast.types.AType;

public class TestExprChecking {
	private ANTLRParser parser;
	private ExprChecker exprChecker;
	private Map<Ident,AType> typeEnv;
	private List<String> errMsgs;
	
	public TestExprChecking() {
		parser = new ANTLRParser();
		typeEnv = new HashMap<Ident, AType>();
		errMsgs = new ArrayList<String>();
		exprChecker = new ExprChecker(typeEnv, errMsgs);
	}
	
	@Test
	public void testExprChecking() throws ParseError {
		assertTrue(exprChecker.check(parser.parseExpr("10-25"), typeEnv, errMsgs));
		assertTrue(exprChecker.check(parser.parseExpr("true || false"), typeEnv, errMsgs));
		assertTrue(exprChecker.check(parser.parseExpr("23 >= 56"), typeEnv, errMsgs));
		assertTrue(exprChecker.check(parser.parseExpr("25+56*(3/1)"), typeEnv, errMsgs));
		assertTrue(exprChecker.check(parser.parseExpr("\"abc\"==\"abc\""), typeEnv, errMsgs));
		assertFalse(exprChecker.check(parser.parseExpr("10-true"), typeEnv, errMsgs));
		assertFalse(exprChecker.check(parser.parseExpr("true || 20"), typeEnv, errMsgs));
		assertFalse(exprChecker.check(parser.parseExpr("\"abc\" + 56"), typeEnv, errMsgs));
	}
}