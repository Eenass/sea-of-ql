package org.uva.sea.ql.visitor;

import java.util.List;
import java.util.Map;
import org.uva.sea.ql.ast.expressions.Bool;
import org.uva.sea.ql.ast.expressions.Expr;
import org.uva.sea.ql.ast.expressions.Ident;
import org.uva.sea.ql.ast.expressions.Int;
import org.uva.sea.ql.ast.expressions.Str;
import org.uva.sea.ql.ast.expressions.binaryExpr.Add;
import org.uva.sea.ql.ast.expressions.binaryExpr.And;
import org.uva.sea.ql.ast.expressions.binaryExpr.Div;
import org.uva.sea.ql.ast.expressions.binaryExpr.Eq;
import org.uva.sea.ql.ast.expressions.binaryExpr.GEq;
import org.uva.sea.ql.ast.expressions.binaryExpr.GT;
import org.uva.sea.ql.ast.expressions.binaryExpr.LEq;
import org.uva.sea.ql.ast.expressions.binaryExpr.LT;
import org.uva.sea.ql.ast.expressions.binaryExpr.Mul;
import org.uva.sea.ql.ast.expressions.binaryExpr.NEq;
import org.uva.sea.ql.ast.expressions.binaryExpr.Or;
import org.uva.sea.ql.ast.expressions.binaryExpr.Sub;
import org.uva.sea.ql.ast.expressions.unaryExpr.Neg;
import org.uva.sea.ql.ast.expressions.unaryExpr.Not;
import org.uva.sea.ql.ast.expressions.unaryExpr.Pos;
import org.uva.sea.ql.ast.types.Type;

public class ExprChecker implements ExprVisitor<Boolean> {

	private final Map<Ident, Type> typeEnv;
	private final List<String> messages;
	
	private ExprChecker(Map<Ident, Type> tenv, List<String> messages) {
		this.typeEnv = tenv;
		this.messages = messages;
	}
	
	public static boolean check(Expr expr, Map<Ident, Type> typeEnv, List<String> errors) {
		ExprChecker check = new ExprChecker(typeEnv, errors);
		return expr.accept(check);
	}
	
	@Override
	public Boolean visit(Bool ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Ident ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Int ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Str ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Add ast) {
		
		boolean checkLhs = ast.getLhs().accept(this);
		boolean checkRhs = ast.getRhs().accept(this);
		
		return true;
	}

	@Override
	public Boolean visit(And ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Div ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Eq ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(GEq ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(GT ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(LEq ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(LT ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Mul ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(NEq ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Or ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Sub ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Neg ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Not ast) {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public Boolean visit(Pos ast) {
		// TODO Auto-generated method stub
		return true;
	}
}